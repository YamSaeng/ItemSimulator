// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users{
	userId	Int	@id	@default(autoincrement()) @map("userId")
	id	String	@unique @map("id")
	password	String	@map("password")	

	characters	Characters[]
	refreshTokens RefreshTokens?

	@@map("Users")
}

model Characters{
	characterId	Int	@id	@default(autoincrement()) @map("characterId")
	userId String @map("userId")
	characterName String @unique @map("characterName")	
	hp		Int @map("hp")
	str		Int @map("str")
	dex		Int @map("dex")
	int		Int	@map("int")
	money	Int @map("money")

	user    Users	@relation(fields: [userId], references: [id], onDelete: Cascade)
	
	inventory Inventory?
	equipment Equipment?

	@@map("Characters")
}

model Items{
	itemId Int @id @default(autoincrement()) @map("itemId")
	itemCode Int @unique @map("itemCode")
	itemName String	@map("itemName")
	itemPrice Int @map("itemPrice")	
	itemStr	  Int @map("itemStr")
	itemDex	  Int @map("itemDex")
	itemInt	  Int @map("itemInt")	

	@@map("Items")
}

model Inventory{
	inventoryId Int @id @default(autoincrement()) @map("inventoryId")
	characterId Int @unique @map("characterId")
	maxInventoryItem Int @default(12) @map("maxInventoryItem")

	characters Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

	inventoryItem InventoryItem[]

	@@map("Inventory")
}

model InventoryItem{
	inventoryItemId Int @id @default(autoincrement()) @map("inventoryItemId")
	inventoryId Int @map("inventoryId")
	itemId Int? @map("itemId")
	inventoryItemIndex Int @map("inventoryItemIndex")
	inventoryItemCount Int? @map("inventoryItemCount")

	inventory Inventory @relation(fields: [inventoryId], references: [inventoryId], onDelete: Cascade)

	@@map("InventoryItem")
}

model Equipment{
	equipmentId Int @id @default(autoincrement()) @map("equipmentId")
	characterId Int @unique @map("characterId")
	headPartItemCode Int? @map("headPartItemCode") 
	weaponPartItemCode Int? @map("weaponPartItemCode")

	characters Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

	@@map("Equipment")
}

model RefreshTokens{
	tokenId Int	@id	@default(autoincrement()) @map("tokenId")
	userId String @unique @map("userId")
	token String @map("token")	
	
	users Users @relation(fields:[userId], references:[id])

	@@map("RefreshTokens")
}